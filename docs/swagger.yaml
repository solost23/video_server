basePath: /
definitions:
  model.CasbinModel:
    properties:
      method:
        type: string
      path:
        type: string
      ptype:
        type: string
      role_name:
        type: string
    type: object
  model.Class:
    properties:
      createTime:
        description: DeleteStatus string `gorm:"type:enum('DELETE_STATUS_NORMAL','DELETE_STATUS_DEL');default:DELETE_STATUS_NORMAL"`
        type: integer
      id:
        type: string
      introduce:
        type: string
      title:
        type: string
      updateTime:
        type: integer
      userID:
        type: string
    type: object
  model.Comment:
    properties:
      content:
        type: string
      createTime:
        description: DeleteStatus string `gorm:"delete_status;type:enum('DELETE_STATUS_NORMAL','DELETE_STATUS_DEL');default:DELETE_STATUS_NORMAL"`
        type: integer
      id:
        type: string
      isThumb:
        type: string
      parentId:
        type: string
      updateTime:
        type: integer
      videoID:
        type: string
    type: object
  model.User:
    properties:
      avatar:
        type: string
      commentCount:
        type: integer
      createTime:
        description: DeleteStatus string `gorm:"delete_status;type:enum('DELETE_STATUS_NORMAL','DELETE_STATUS_DEL');default:DELETE_STATUS_NORMAL"`
        type: integer
      fansCount:
        type: integer
      id:
        type: string
      introduce:
        type: string
      nickname:
        type: string
      password:
        type: string
      role:
        type: string
      updateTime:
        type: integer
      user_name:
        type: string
    type: object
  model.Video:
    properties:
      classID:
        type: string
      commentCount:
        type: integer
      createTime:
        type: integer
      deleteStatus:
        type: string
      id:
        type: string
      introduce:
        type: string
      thumbCount:
        type: integer
      title:
        type: string
      updateTime:
        type: integer
      userID:
        type: string
      videoUrl:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: this is a video server
  title: video_server Swagger
  version: "1.0"
paths:
  /class/{user_name}:
    get:
      consumes:
      - application/json
      description: get user all class
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: get user all class
      tags:
      - Class
    post:
      consumes:
      - application/json
      description: add class
      parameters:
      - description: 类别
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Class'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: create_class
      tags:
      - Class
  /class/{user_name}/{class_id}:
    put:
      consumes:
      - application/json
      description: update class
      parameters:
      - description: 类别
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Class'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: update_class
      tags:
      - Class
  /comment/{video_id}:
    get:
      consumes:
      - application/json
      description: get comment by video id
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: get_comment_by_video_id
      tags:
      - Comment
    post:
      consumes:
      - application/json
      description: add comment
      parameters:
      - description: 评论
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Comment'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: create comment
      tags:
      - Comment
  /comment/{video_id}/{comment_id}:
    delete:
      consumes:
      - application/json
      description: delete comment
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: delete comment
      tags:
      - Comment
  /login:
    post:
      consumes:
      - application/json
      description: user login
      parameters:
      - description: 用户
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: login
      tags:
      - User
  /register:
    post:
      consumes:
      - application/json
      description: add user
      parameters:
      - description: 用户
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: register
      tags:
      - User
  /role:
    delete:
      consumes:
      - application/json
      description: delete roleAuth
      parameters:
      - description: 角色
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.CasbinModel'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: delete role
      tags:
      - Role
    get:
      consumes:
      - application/json
      description: get all roleAuth
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: get all roleAuth
      tags:
      - Role
    post:
      consumes:
      - application/json
      description: add roleAuth
      parameters:
      - description: 角色
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.CasbinModel'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: add roleAuth
      tags:
      - Role
  /role/{role_name}:
    get:
      consumes:
      - application/json
      description: get roleAuth
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: get roleAuth
      tags:
      - Role
  /user:
    get:
      consumes:
      - application/json
      description: get all user info
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: get_all_user_info
      tags:
      - User
  /user/{user_name}:
    delete:
      consumes:
      - application/json
      description: update user info
      parameters:
      - description: 用户
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: update_user_info
      tags:
      - User
    get:
      consumes:
      - application/json
      description: get user info
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: get_user_info
      tags:
      - User
  /video:
    get:
      consumes:
      - application/json
      description: get all video
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: get_all_video
      tags:
      - Video
  /video/{user_name}:
    get:
      consumes:
      - application/json
      description: get video by user_name
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: get_video_by_userName
      tags:
      - Video
  /video/{user_name}/{class_id}:
    get:
      consumes:
      - application/json
      description: get video by user_name and class_id
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: get_video_by_userName_and_classID
      tags:
      - Video
    post:
      consumes:
      - application/json
      description: add video
      parameters:
      - description: 视频
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Video'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: add video
      tags:
      - Video
  /video/{user_name}/{class_id}/{video_id}:
    delete:
      consumes:
      - application/json
      description: delete video
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: delete video
      tags:
      - Video
    get:
      consumes:
      - application/json
      description: get video
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: get video
      tags:
      - Video
schemes:
- http
- https
swagger: "2.0"
